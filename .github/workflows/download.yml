name: 下载番茄小说

on:
  workflow_dispatch:
    inputs:
      novel_id:
        description: '① 小说ID (例如: 7143038691944959011)'
        required: true
        type: string
      verification_token:
        description: '② 人机验证令牌 (需要手动获取)'
        required: true
        type: string
      file_format:
        description: '③ 下载格式'
        required: true
        type: choice
        options:
          - txt
          - epub
        default: 'txt'

jobs:
  download_and_commit:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 设置 Python 3.10 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 安装依赖库
        run: |
          # 确保 requirements.txt 文件存在于你的仓库中
          # 使用 -r 参数可以更方便地管理依赖 
          pip install -r requirements.txt

      - name: 下载小说
        run: |
          # 使用命令行参数将 GitHub Actions 输入传递给脚本
          # --save-path "novel" 指定了固定的保存路径
          python 2.py \
            --book-id "${{ github.event.inputs.novel_id }}" \
            --save-path "novel" \
            --format "${{ github.event.inputs.file_format }}" \
            --token "${{ github.event.inputs.verification_token }}"

      - name: 提交并推送小说文件
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 只添加 novel 目录下的变动
          git add novel/
          
          # 检查是否有文件变动，避免在下载失败时创建空提交
          if git diff --staged --quiet; then
            echo "下载失败或文件已存在，没有变更需要提交。"
          else
            git commit -m "feat: 下载小说 ${{ github.event.inputs.novel_id }}"
            git push
          fi
